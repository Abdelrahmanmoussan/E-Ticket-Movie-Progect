@model IEnumerable<E_Ticket.Models.Actor>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Actors List</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>
    <style>
        body {
            background-color: #141414;
            color: white;
            font-family: Arial, sans-serif;
        }

        .container {
            margin-top: 30px;
        }

        .actor-card {
            background-color: #222;
            border-radius: 10px;
            overflow: hidden;
            transition: transform 0.3s;
        }

            .actor-card:hover {
                transform: scale(1.05);
            }

        .actor-img {
            width: 100px;
            height: 100px;
            border-radius: 50%;
            object-fit: cover;
            /* border: 3px solid #dc3545; */
        }

        .actor-name {
            font-size: 1.2rem;
            font-weight: bold;
            margin-top: 10px;
        }

        .actor-bio {
            font-size: 0.9rem;
            color: #bbb;
            max-height: 50px;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
        }

        .btn-group a {
            margin: 5px;
            text-decoration: none;
            font-size: 0.9rem;
        }
    </style>
</head>
<body>
    <div class="container text-center">
        <h2 class="mb-4">🎭 Actors List</h2>
        <div class="mb-4">
            <a asp-area="Admin" asp-controller="ActorAdmin" asp-action="Create" class="btn btn-success px-4 py-2">➕ Add Actor</a>
        </div>
        <div class="row">
            @foreach (var actor in Model)
            {
                <div class="col-md-3 mb-4">
                    <div class="actor-card p-3 text-center">
                        <img src="~/images/cast/@actor.ProfilePicture" alt="@actor.FirstName @actor.LastName" class="actor-img">
                        <div class="actor-name">@actor.FirstName @actor.LastName</div>
                        <p class="actor-bio">@actor.Bio</p>
                        <div class="d-flex justify-content-center gap-2 mt-3">
                            <a asp-action="Details" asp-route-actorId="@actor.Id" class="btn btn-info btn-sm">📄 Details</a>
                            <a asp-action="Edit" asp-route-actorId="@actor.Id" class="btn btn-warning btn-sm">✏ Edit</a>
                            <form id="delete-form-@actor.Id" method="POST" action="/Admin/ActorAdmin/Delete">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="actorId" value="@actor.Id" />
                                <button type="button" class="btn btn-danger btn-sm" onclick="confirmDelete(@actor.Id)">🗑 Delete</button>
                            </form>
                        </div>

                    </div>
                </div>
            }
        </div>
    </div>
</body>
</html>

<script>
    function confirmDelete(actorId) {
        console.log("Delete function called for Actor ID:", actorId); // Debugging log

        Swal.fire({
            title: "Are you sure?",
            text: "This action cannot be undone!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#d33",
            cancelButtonColor: "#6c757d",
            confirmButtonText: "Yes, delete it!",
            cancelButtonText: "Cancel"
        }).then((result) => {
            if (result.isConfirmed) {
                console.log("Confirmed delete for:", actorId); // Debugging log

                // Find the CSRF token from the page
                let csrfToken = document.querySelector('input[name="__RequestVerificationToken"]').value;

                // Create a form dynamically to send a POST request
                let form = document.createElement("form");
                form.method = "POST";
                form.action = "/Admin/ActorAdmin/Delete";  // Make sure this matches your route

                // Add CSRF token to the form
                let csrfInput = document.createElement("input");
                csrfInput.type = "hidden";
                csrfInput.name = "__RequestVerificationToken";
                csrfInput.value = csrfToken;
                form.appendChild(csrfInput);

                // Add actor ID to the form
                let idInput = document.createElement("input");
                idInput.type = "hidden";
                idInput.name = "actorId";
                idInput.value = actorId;
                form.appendChild(idInput);

                document.body.appendChild(form);
                form.submit();
            }
        });
    }

</script>